{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the ColorizeAI application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "User's first name."
        },
        "lastName": {
          "type": "string",
          "description": "User's last name."
        },
        "createdAt": {
          "type": "string",
          "description": "Date and time when the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "firstName",
        "lastName",
        "createdAt"
      ]
    },
    "Project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Project",
      "type": "object",
      "description": "Represents a user's coloring book project.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the project."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Project)"
        },
        "name": {
          "type": "string",
          "description": "Name of the project."
        },
        "createdAt": {
          "type": "string",
          "description": "Date and time when the project was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Date and time when the project was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "createdAt",
        "updatedAt"
      ]
    },
    "Image": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Image",
      "type": "object",
      "description": "Represents an image within a project.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the image."
        },
        "projectId": {
          "type": "string",
          "description": "Reference to Project. (Relationship: Project 1:N Image)"
        },
        "originalImageUrl": {
          "type": "string",
          "description": "URL of the original uploaded image.",
          "format": "uri"
        },
        "convertedImageUrl": {
          "type": "string",
          "description": "URL of the converted coloring book image.",
          "format": "uri"
        },
        "status": {
          "type": "string",
          "description": "Status of the image conversion (e.g., pending, processed, error)."
        },
        "createdAt": {
          "type": "string",
          "description": "Date and time when the image was added.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "projectId",
        "originalImageUrl",
        "convertedImageUrl",
        "status",
        "createdAt"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents a customer order for a coloring book.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Order)"
        },
        "projectId": {
          "type": "string",
          "description": "Reference to Project. (Relationship: Project 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "Date of the order.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount of the order."
        },
        "shippingAddress": {
          "type": "string",
          "description": "Shipping address for the order."
        },
        "status": {
          "type": "string",
          "description": "Status of the order (e.g., pending, processing, shipped, completed)."
        }
      },
      "required": [
        "id",
        "userId",
        "projectId",
        "orderDate",
        "totalAmount",
        "shippingAddress",
        "status"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Path-based ownership for private user data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/projects/{projectId}",
        "definition": {
          "entityName": "Project",
          "schema": {
            "$ref": "#/backend/entities/Project"
          },
          "description": "Stores projects created by users. Path-based ownership is enforced, with the project being a subcollection of the user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "projectId",
              "description": "The unique identifier for the project."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/projects/{projectId}/images/{imageId}",
        "definition": {
          "entityName": "Image",
          "schema": {
            "$ref": "#/backend/entities/Image"
          },
          "description": "Stores images associated with a specific project. Continues path-based ownership from User -> Project -> Image.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "projectId",
              "description": "The unique identifier for the project."
            },
            {
              "name": "imageId",
              "description": "The unique identifier for the image."
            }
          ]
        }
      },
      {
        "path": "/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": {
            "$ref": "#/backend/entities/Order"
          },
          "description": "Stores order information. Orders are not placed under users to allow admin access and reporting but include userId for relation. Includes denormalized userId and projectId to simplify access rules.",
          "params": [
            {
              "name": "orderId",
              "description": "The unique identifier for the order."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure authorization independence, clarity, and scalability for the ColorizeAI application. The core principle is to avoid `get()` calls in security rules by denormalizing authorization data. User-owned data is stored in hierarchical paths, simplifying ownership-based security rules. Collaborative data uses a membership map for access control. Segregation of data based on access needs ensures that all documents within a collection share the same security posture, enabling secure `list` operations. The structure supports the integrity of ownership, timestamps, and denormalized data, thus promoting robust security and efficient data access."
  }
}